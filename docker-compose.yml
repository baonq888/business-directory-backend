services:
  db:
    container_name: where_pg_sql
    image: postgres:14.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - microservices-net
    restart: unless-stopped


  mail-dev:
    container_name: where-mail-dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: where_zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: where_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  zipkin:
    container_name: where-zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net
  redis:
    container_name: where-redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - microservices-net
    restart: unless-stopped
#  keycloak:
#    container_name: keycloak-ms
#    image: quay.io/keycloak/keycloak:24.0.2
#    ports:
#      - "9080:8080"
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    networks:
#      - microservices-net
#    command:
#      - "start-dev"
  elasticsearch:
    container_name: where-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Set memory limits
      - xpack.security.enabled=false  # Disable security for local dev
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - microservices-net
    restart: unless-stopped

  kibana:
    container_name: where-kibana
    image: docker.elastic.co/kibana/kibana:8.5.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - microservices-net
    depends_on:
      - elasticsearch
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  db:
  pgadmin:
  elasticsearch: