server:
  port: 8070
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/business_db
    username: postgres
    password: password
  jpa:
    hibernate:
      ddl-auto: validate
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    baseline-on-migrate: true
    enabled: true
    baseline-description: "init"
    baseline-version: 0
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: '*'
#        spring.json.type.mapping: >
#          userCreateEvent:com.where.auth.kafka.UserCreateEvent,
#          userRoleUpdateEvent:com.where.auth.kafka.UserRoleUpdateEvent
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: business-group
  cache:
    type: redis
geonames:
  username: baonq888
redis:
  host: where-redis
  port: 6379
  timeout: 5000
  database: 1